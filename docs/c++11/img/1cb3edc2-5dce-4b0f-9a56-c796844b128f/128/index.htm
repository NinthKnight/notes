<!doctype html><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=unicode">
<title>模拟stl中智能指针</title>
    
<style id="wiz_code_style">.wiz-editor-body .wiz-code-container{position: relative; padding:8px 0; margin: 5px 25px 5px 5px;text-indent:0; text-align:left;}.CodeMirror {font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace; color: black; font-size: 10.5pt; font-size: 0.875rem}.wiz-editor-body .wiz-code-container .CodeMirror div {margin-top: 0; margin-bottom: 0;}.CodeMirror-lines {padding: 4px 0;}.CodeMirror pre {padding: 0 4px;}.CodeMirror pre.CodeMirror-line {min-height: 24px;}.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {background-color: white;}.CodeMirror-gutters {border-right: 1px solid #ddd; background-color: #f7f7f7; white-space: nowrap;}.CodeMirror-linenumbers {}.CodeMirror-linenumber {padding: 0 3px 0 5px; min-width: 20px; text-align: right; color: #999; white-space: nowrap;}.CodeMirror-guttermarker {color: black;}.CodeMirror-guttermarker-subtle {color: #999;}.CodeMirror-cursor {border-left: 1px solid black; border-right: none; width: 0;}.CodeMirror div.CodeMirror-secondarycursor {border-left: 1px solid silver;}.cm-fat-cursor .CodeMirror-cursor {width: auto; border: 0 !important; background: #7e7;}.cm-fat-cursor div.CodeMirror-cursors {z-index: 1;}.cm-animate-fat-cursor {width: auto; border: 0; -webkit-animation: blink 1.06s steps(1) infinite; -moz-animation: blink 1.06s steps(1) infinite; animation: blink 1.06s steps(1) infinite; background-color: #7e7;}@-moz-keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}@-webkit-keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}@keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}.CodeMirror-overwrite .CodeMirror-cursor {}.cm-tab { display: inline-block; text-decoration: inherit; }.CodeMirror-rulers {position: absolute; left: 0; right: 0; top: -50px; bottom: -20px; overflow: hidden;}.CodeMirror-ruler {border-left: 1px solid #ccc; top: 0; bottom: 0; position: absolute;}.cm-s-default .cm-header {color: blue;}.cm-s-default .cm-quote {color: #090;}.cm-negative {color: #d44;}.cm-positive {color: #292;}.cm-header, .cm-strong {font-weight: bold;}.cm-em {font-style: italic;}.cm-link {text-decoration: underline;}.cm-strikethrough {text-decoration: line-through;}.cm-s-default .cm-keyword {color: #708;}.cm-s-default .cm-atom {color: #219;}.cm-s-default .cm-number {color: #164;}.cm-s-default .cm-def {color: #00f;}.cm-s-default .cm-variable,.cm-s-default .cm-punctuation,.cm-s-default .cm-property,.cm-s-default .cm-operator {}.cm-s-default .cm-variable-2 {color: #05a;}.cm-s-default .cm-variable-3 {color: #085;}.cm-s-default .cm-comment {color: #a50;}.cm-s-default .cm-string {color: #a11;}.cm-s-default .cm-string-2 {color: #f50;}.cm-s-default .cm-meta {color: #555;}.cm-s-default .cm-qualifier {color: #555;}.cm-s-default .cm-builtin {color: #30a;}.cm-s-default .cm-bracket {color: #997;}.cm-s-default .cm-tag {color: #170;}.cm-s-default .cm-attribute {color: #00c;}.cm-s-default .cm-hr {color: #999;}.cm-s-default .cm-link {color: #00c;}.cm-s-default .cm-error {color: #f00;}.cm-invalidchar {color: #f00;}.CodeMirror-composing { border-bottom: 2px solid; }div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }.CodeMirror-activeline-background {background: #e8f2ff;}.CodeMirror {position: relative; background: #f5f5f5;}.CodeMirror-scroll {overflow: hidden !important; margin-bottom: 0; margin-right: -30px; padding: 16px 30px 16px 0; outline: none; position: relative;}.CodeMirror-sizer {position: relative; border-right: 30px solid transparent;}.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {position: absolute; z-index: 6; display: none;}.CodeMirror-vscrollbar {right: 0; top: 0; overflow-x: hidden; overflow-y: scroll;}.CodeMirror-hscrollbar {bottom: 0; left: 0 !important; overflow-y: hidden; overflow-x: scroll;}.CodeMirror-scrollbar-filler {right: 0; bottom: 0;}.CodeMirror-gutter-filler {left: 0; bottom: 0;}.CodeMirror-gutters {position: absolute; left: 0; top: -5px; min-height: 100%; z-index: 3;}.CodeMirror-gutter {white-space: normal; height: inherit; display: inline-block; vertical-align: top; margin-bottom: -30px;}.CodeMirror-gutter-wrapper {position: absolute; z-index: 4; background: none !important; border: none !important;}.CodeMirror-gutter-background {position: absolute; top: 0; bottom: 0; z-index: 4;}.CodeMirror-gutter-elt {position: absolute; cursor: default; z-index: 4; text-align: center;}.CodeMirror-gutter-wrapper ::selection { background-color: transparent }.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }.CodeMirror-lines {cursor: text; min-height: 1px;}.CodeMirror pre {-moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0; border-width: 0; background: transparent; font-family: inherit; font-size: inherit; margin: 0; white-space: pre; word-wrap: normal; line-height: inherit; color: inherit; z-index: 2; position: relative; overflow: visible; -webkit-tap-highlight-color: transparent; -webkit-font-variant-ligatures: contextual; font-variant-ligatures: contextual;}.CodeMirror-wrap pre {word-wrap: break-word; white-space: pre-wrap; word-break: normal;}.CodeMirror-linebackground {position: absolute; left: 0; right: 0; top: 0; bottom: 0; z-index: 0;}.CodeMirror-linewidget {position: relative; z-index: 2; overflow: auto;}.CodeMirror-widget {}.CodeMirror-rtl pre { direction: rtl; }.CodeMirror-code {outline: none;}.CodeMirror-scroll,.CodeMirror-sizer,.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber {-moz-box-sizing: content-box; box-sizing: content-box;}.CodeMirror-measure {position: absolute; width: 100%; height: 0; overflow: hidden; visibility: hidden;}.CodeMirror-cursor {position: absolute; pointer-events: none;}.CodeMirror-measure pre { position: static; }div.CodeMirror-cursors {visibility: hidden; position: relative; z-index: 3;}div.CodeMirror-dragcursors {visibility: visible;}.CodeMirror-focused div.CodeMirror-cursors {visibility: visible;}.CodeMirror-selected { background: #d9d9d9; }.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }.CodeMirror-crosshair { cursor: crosshair; }.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }.cm-searching {background: #ffa; background: rgba(255, 255, 0, .4);}.cm-force-border { padding-right: .1px; }@media print {  .CodeMirror div.CodeMirror-cursors {visibility: hidden;}}.cm-tab-wrap-hack:after { content: ""; }span.CodeMirror-selectedtext { background: none; }.CodeMirror-activeline-background, .CodeMirror-selected {transition: visibility 0ms 100ms;}.CodeMirror-blur .CodeMirror-activeline-background, .CodeMirror-blur .CodeMirror-selected {visibility:hidden;}.CodeMirror-blur .CodeMirror-matchingbracket {color:inherit !important;outline:none !important;text-decoration:none !important;}.CodeMirror-sizer {min-height:auto !important;}</style><style id="wiz_code_style-base16-light" name="wiz_code_style">.cm-s-base16-light.CodeMirror { background: #f5f5f5; color: #202020; }.cm-s-base16-light div.CodeMirror-selected { background: #e0e0e0; }.cm-s-base16-light .CodeMirror-line::selection, .cm-s-base16-light .CodeMirror-line > span::selection, .cm-s-base16-light .CodeMirror-line > span > span::selection { background: #e0e0e0; }.cm-s-base16-light .CodeMirror-line::-moz-selection, .cm-s-base16-light .CodeMirror-line > span::-moz-selection, .cm-s-base16-light .CodeMirror-line > span > span::-moz-selection { background: #e0e0e0; }.cm-s-base16-light .CodeMirror-gutters { background: #f5f5f5; border-right: 0px; }.cm-s-base16-light .CodeMirror-guttermarker { color: #ac4142; }.cm-s-base16-light .CodeMirror-guttermarker-subtle { color: #b0b0b0; }.cm-s-base16-light .CodeMirror-linenumber { color: #b0b0b0; }.cm-s-base16-light .CodeMirror-cursor { border-left: 1px solid #505050; }.cm-s-base16-light span.cm-comment { color: #8f5536; }.cm-s-base16-light span.cm-atom { color: #aa759f; }.cm-s-base16-light span.cm-number { color: #aa759f; }.cm-s-base16-light span.cm-property, .cm-s-base16-light span.cm-attribute { color: #90a959; }.cm-s-base16-light span.cm-keyword { color: #ac4142; }.cm-s-base16-light span.cm-string { color: #f4bf75; }.cm-s-base16-light span.cm-variable { color: #90a959; }.cm-s-base16-light span.cm-variable-2 { color: #6a9fb5; }.cm-s-base16-light span.cm-def { color: #d28445; }.cm-s-base16-light span.cm-bracket { color: #202020; }.cm-s-base16-light span.cm-tag { color: #ac4142; }.cm-s-base16-light span.cm-link { color: #aa759f; }.cm-s-base16-light span.cm-error { background: #ac4142; color: #505050; }.cm-s-base16-light .CodeMirror-activeline-background { background: #DDDCDC; }.cm-s-base16-light .CodeMirror-matchingbracket { text-decoration: underline; color: white !important; }</style><style id="wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;position:relative;padding: 20px 16px;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8px 0 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-body a {word-wrap: break-word;text-decoration-skip-ink: none;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-editor-body li.wiz-list-align-style {list-style-position: inside; margin-left: -1em;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !important;margin:2px 0;padding: 2px;vertical-align:bottom;}.wiz-editor-body table {border-collapse:collapse;border:1px solid #a7afbc;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:collapse;border:1px solid #a7afbc;min-height:28px;word-break:break-word;box-sizing: border-box;}.wiz-editor-body td > div:first-child {margin-top:0;}.wiz-editor-body td > div:last-child {margin-bottom:0;}.wiz-editor-body img.wiz-svg-image {box-shadow:1px 1px 4px #E8E8E8;}.wiz-editor-body .wiz-image-container {margin:0;max-width: 100%;display: inline-flex;flex-direction: column;}.wiz-editor-body .wiz-image-container .wiz-image-title {display:inline-block;text-align: center;color: #a7afbc;line-height: 18px;font-size: 12px;min-height: 18px;width: 100%;white-space: normal;}.wiz-hide {display:none !important;}.wiz-editor-body.wiz-editor-outline {padding-right:0; padding-left:0;}.wiz-editor-body.wiz-editor-outline .outline-container {margin:0; padding:0; line-height:1.5;}.wiz-editor-body.wiz-editor-outline .outline-container div {margin:0;}.wiz-editor-body.wiz-editor-outline .node {margin:0; padding: 0;}.wiz-editor-body.wiz-editor-outline .outline-container > .node {margin-right:24px; margin-left:30px;}.wiz-editor-body.wiz-editor-outline .node.collapsed .children {display:none;}.wiz-editor-body.wiz-editor-outline .node .row {position:relative; padding-left:26px;}.wiz-editor-body.wiz-editor-outline .node .operator-container {width:36px;position:absolute; top:4px; left:-18px;}.wiz-editor-body.wiz-editor-outline .node .operator-bar {position:absolute; top:0; left:0; right:0; bottom:0; display:flex; align-items:center; justify-content:center;}.wiz-editor-body.wiz-editor-outline .node .switch {width:18px; height:18px;display:flex;flex-direction: column;align-items: center;overflow: hidden;}.wiz-editor-body.wiz-editor-outline .node .switch i {font-size:20px;position:relative;left:-1px;top:-1px;}.wiz-editor-body.wiz-editor-outline .node .switch.active {cursor:pointer;color:transparent; transition:transform 200ms ease 0s;}.wiz-editor-body.wiz-editor-outline .node.collapsed .switch.active {transform:rotateZ(-90deg);}.wiz-editor-body.wiz-editor-outline .node .row:hover .switch.active {color:#505F79}.wiz-editor-body.wiz-editor-outline .node .dot {display:flex; align-items:center; justify-content:center; border-radius:100%; width:18px; height:18px;}.wiz-editor-body.wiz-editor-outline .node.collapsed .dot {background-color:rgba(80, 95, 121, .15);}.wiz-editor-body.wiz-editor-outline .node .dot-icon {background-color:#505F79; border-radius:100%; width:6px; height:6px;}.wiz-editor-body.wiz-editor-outline .node .child {margin-left:8px; border-left:1px solid #E6E9ED; padding-left:17px;}.wiz-editor-body.wiz-editor-outline .node .content {flex:1;outline:none; padding:4px 0;}.wiz-editor-body.wiz-editor-outline .node div.content {font-size:1rem;}.wiz-editor-body.wiz-editor-outline .node.complete > .row .content {text-decoration:line-through;color:#A7AFBC;}.wiz-editor-body.wiz-editor-outline .node .notes {outline:none; font-size:.8rem; color:#A7AFBC;}.wiz-editor-body.wiz-editor-outline .node .image {outline:none; padding-top:4px; padding-bottom:4px;}.wiz-editor-body.wiz-editor-outline .outline-container h1,.wiz-editor-body.wiz-editor-outline .outline-container h2,.wiz-editor-body.wiz-editor-outline .outline-container h3,.wiz-editor-body.wiz-editor-outline .outline-container h4,.wiz-editor-body.wiz-editor-outline .outline-container h5,.wiz-editor-body.wiz-editor-outline .outline-container h6 {margin:0;}body, .wiz-editor-body {  padding-left: 48px;  padding-right: 48px;}</style><style name="wiz_unsave_style">html, .wiz-editor-body {    font-size: 12pt;}body, .wiz-editor-body {    font-family: Helvetica, 'Hiragino Sans GB', 微软雅黑, 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;    line-height: 1.7 !important;    color: inherit;    background-color: #ffffff;}img{    max-width: 100%;}.wiz-todo-main{	line-height: 1.7 !important;}</style><style name="wiz_unsave_style">body::-webkit-scrollbar {width: 16px;height: 16px;background-color: #f0f0f0;border: none;}body::-webkit-scrollbar-thumb {background-color: #dcdcdc;}body::-webkit-scrollbar-thumb:hover {background-color: #c0c0c0;}body::-webkit-scrollbar-thumb:active {background-color: #969696;}body::-webkit-scrollbar-thumb:disabled {background-color: #f9f9f9;}body::_webkit_scrollbar-track {background-color: #ffffff;}body::-webkit-scrollbar-corner {background-color: #f0f0f0;}body::-webkit-scrollbar-button {\*  display: none;*\}body.flat-scrollbar::-webkit-scrollbar,body.flat-scrollbar div::-webkit-scrollbar,body.flat-scrollbar ul::-webkit-scrollbar,body.flat-scrollbar aside::-webkit-scrollbar,body.flat-scrollbar iframe::-webkit-scrollbar {width: 12px;height: 12px;}</style><script type="text/javascript" src="file:///C:/Program%20Files%20(x86)/WizNote/WizTools/htmleditor/editorHelper.js" wiz_style="unsave" charset="utf-8" defer></script><script type="text/javascript" src="file:///C:/Users/Halo/Documents/My%20Knowledge/templates/WizTemplate.js" wiz_style="unsave" charset="utf-8" defer></script><script type="text/javascript" src="file:///C:/Program%20Files%20(x86)/WizNote/WizTools/htmleditor/core/wizEditorForPc.js" wiz_style="unsave" charset="utf-8" defer></script><script type="text/javascript" wiz_style="unsave" charset="utf-8">document.addEventListener('DOMContentLoaded', function handler(){
	if(window.external){
		try{
			window.WizChromeBrowser.Execute("Wiz_DOMContentLoaded", null, null, null, null);
		}catch(err){
			console.error(err);
		}
	}
	document.removeEventListener('DOMContentLoaded', handler, false);
}, false);</script></head>

<body class="wiz-editor-body" style spellcheck="false"><div>&nbsp; &nbsp; stl中使用了shared_ptr来管理一个对象的内部指针，并且使用了<span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">weak_ptr来防止前面所提到的shared_ptr循环引用的问题。</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp; 接下来简单的分析shared_ptr和weak_ptr的实现，最后通过自己写代码来模拟shared_ptr和weak_ptr，达到深入学习的目的：</span></div><div>&nbsp; &nbsp; 测试代码如下：</div><div class="wiz-code-container" id="wiz_cm_1525365489146_9674" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">#include "stdafx.h"
#include &lt;memory&gt;

int _tmain(int argc, _TCHAR* argv[])
{	
	std::shared_ptr&lt;int&gt; sptr(new int(3));
	std::shared_ptr&lt;int&gt; sptr2 = sptr;

	std::weak_ptr&lt;int&gt; wptr = sptr;

	if (!wptr.expired()){
		
		std::shared_ptr&lt;int&gt; sptr3 = wptr.lock();
	}

	return 0;
}</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489146_9674"><div style="left: 33px; top: 19.99px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 416px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>17</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>17</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -29px; width: 29px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-meta">#include "stdafx.h"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-meta">#include &lt;memory&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-type">int</span> <span class="cm-def">_tmain</span>(<span class="cm-type">int</span> <span class="cm-variable">argc</span>, <span class="cm-variable">_TCHAR</span><span class="cm-operator">*</span> <span class="cm-variable">argv</span>[])</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span>{<span class="cm-tab">   </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">std::shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-type">int</span><span class="cm-operator">&gt;</span> <span class="cm-variable">sptr</span>(<span class="cm-keyword">new</span> <span class="cm-type">int</span>(<span class="cm-number">3</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">std::shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-type">int</span><span class="cm-operator">&gt;</span> <span class="cm-variable">sptr2</span> <span class="cm-operator">=</span> <span class="cm-variable">sptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">std::weak_ptr</span><span class="cm-operator">&lt;</span><span class="cm-type">int</span><span class="cm-operator">&gt;</span> <span class="cm-variable">wptr</span> <span class="cm-operator">=</span> <span class="cm-variable">sptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-operator">!</span><span class="cm-variable">wptr</span>.<span class="cm-variable">expired</span>()){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">std::shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-type">int</span><span class="cm-operator">&gt;</span> <span class="cm-variable">sptr3</span> <span class="cm-operator">=</span> <span class="cm-variable">wptr</span>.<span class="cm-variable">lock</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line"><span>}</span></pre></div></div></div></div></div></div><div style="top: 416px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 446px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp;1. 首先看直接看继承关系和类成员：</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp; &nbsp;shared_ptr与weak_ptr均继承自同一个父类 &nbsp;_Ptr_base</span></div><div class="wiz-code-container" id="wiz_cm_1525365489144_7085" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">template&lt;class _Ty&gt;
	class shared_ptr
		: public _Ptr_base&lt;_Ty&gt;
	{	// class for reference counted resource management
public:
	typedef shared_ptr&lt;_Ty&gt; _Myt;
	typedef _Ptr_base&lt;_Ty&gt; _Mybase;

	shared_ptr() _NOEXCEPT
		{	// construct empty shared_ptr
		}

	template&lt;class _Ux&gt;
		explicit shared_ptr(_Ux *_Px)
		{	// construct shared_ptr object that owns _Px
		_Resetp(_Px);
		}

	template&lt;class _Ux,
		class _Dx&gt;
		shared_ptr(_Ux *_Px, _Dx _Dt)
		{	// construct with _Px, deleter
		_Resetp(_Px, _Dt);
		}

	shared_ptr(nullptr_t)
		{	// construct empty shared_ptr
		}

	_Myt&amp; operator=(_Myt&amp;&amp; _Right) _NOEXCEPT
		{	// construct shared_ptr object that takes resource from _Right
		shared_ptr(_STD move(_Right)).swap(*this);
		return (*this);
		}

	template&lt;class _Ty2&gt;
		_Myt&amp; operator=(shared_ptr&lt;_Ty2&gt;&amp;&amp; _Right) _NOEXCEPT
		{	// construct shared_ptr object that takes resource from _Right
		shared_ptr(_STD move(_Right)).swap(*this);
		return (*this);
		}

	~shared_ptr() _NOEXCEPT
		{	// release resource
		this-&gt;_Decref();
		}

	_Myt&amp; operator=(const _Myt&amp; _Right) _NOEXCEPT
		{	// assign shared ownership of resource owned by _Right
		shared_ptr(_Right).swap(*this);
		return (*this);
		}

	template&lt;class _Ty2&gt;
		_Myt&amp; operator=(const shared_ptr&lt;_Ty2&gt;&amp; _Right) _NOEXCEPT
		{	// assign shared ownership of resource owned by _Right
		shared_ptr(_Right).swap(*this);
		return (*this);
		}


	void reset() _NOEXCEPT
		{	// release resource and convert to empty shared_ptr object
		shared_ptr().swap(*this);
		}

	template&lt;class _Ux&gt;
		void reset(_Ux *_Px)
		{	// release, take ownership of _Px
		shared_ptr(_Px).swap(*this);
		}

	template&lt;class _Ux,
		class _Dx&gt;
		void reset(_Ux *_Px, _Dx _Dt)
		{	// release, take ownership of _Px, with deleter _Dt
		shared_ptr(_Px, _Dt).swap(*this);
		}

	void swap(_Myt&amp; _Other) _NOEXCEPT
		{	// swap pointers
		this-&gt;_Swap(_Other);
		}

	_Ty *get() const _NOEXCEPT
		{	// return pointer to resource
		return (this-&gt;_Get());
		}

	typename add_reference&lt;_Ty&gt;::type operator*() const _NOEXCEPT
		{	// return reference to resource
		return (*this-&gt;_Get());
		}

	_Ty *operator-&gt;() const _NOEXCEPT
		{	// return pointer to resource
		return (this-&gt;_Get());
		}

	bool unique() const _NOEXCEPT
		{	// return true if no other shared_ptr object owns this resource
		return (this-&gt;use_count() == 1);
		}

	explicit operator bool() const _NOEXCEPT
		{	// test if shared_ptr object owns no resource
		return (this-&gt;_Get() != 0);
		}
	};</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489144_7085"><div style="left: 36px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 32px; border-right-width: 30px; min-height: 2928px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>109</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>109</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -32px; width: 32px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-def">shared_ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>: <span class="cm-keyword">public</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// class for reference counted resource management</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">6</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">typedef</span> <span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span> <span class="cm-variable">_Myt</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">typedef</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span> <span class="cm-variable">_Mybase</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">8</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">10</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct empty shared_ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">11</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">12</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ux</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">explicit</span> <span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_Ux</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">15</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct shared_ptr object that owns _Px</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">16</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Resetp</span>(<span class="cm-variable">_Px</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">17</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">18</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">19</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ux</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-def">_Dx</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">21</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_Ux</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span>, <span class="cm-variable">_Dx</span> <span class="cm-variable">_Dt</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">22</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct with _Px, deleter</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">23</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Resetp</span>(<span class="cm-variable">_Px</span>, <span class="cm-variable">_Dt</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">24</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">25</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">26</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">nullptr_t</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">27</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct empty shared_ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">28</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">29</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">30</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-variable">_Myt</span><span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">31</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct shared_ptr object that takes resource from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">32</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_STD</span> <span class="cm-variable">move</span>(<span class="cm-variable">_Right</span>)).<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">33</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">34</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">35</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">36</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">37</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">38</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct shared_ptr object that takes resource from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">39</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_STD</span> <span class="cm-variable">move</span>(<span class="cm-variable">_Right</span>)).<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">40</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">41</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">42</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">43</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">~shared_ptr</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">44</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">45</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Decref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">46</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">47</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">48</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">49</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// assign shared ownership of resource owned by _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">50</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_Right</span>).<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">51</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">52</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">53</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">54</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">55</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-keyword">const</span> <span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">56</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// assign shared ownership of resource owned by _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">57</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_Right</span>).<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">58</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">59</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">60</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">61</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">62</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">reset</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">63</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and convert to empty shared_ptr object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">64</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>().<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">65</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">66</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">67</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ux</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">68</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">reset</span>(<span class="cm-variable">_Ux</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">69</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release, take ownership of _Px</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">70</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_Px</span>).<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">71</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">72</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">73</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ux</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">74</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-def">_Dx</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">75</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">reset</span>(<span class="cm-variable">_Ux</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span>, <span class="cm-variable">_Dx</span> <span class="cm-variable">_Dt</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">76</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release, take ownership of _Px, with deleter _Dt</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">77</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span>(<span class="cm-variable">_Px</span>, <span class="cm-variable">_Dt</span>).<span class="cm-variable">swap</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">78</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">79</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">80</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">swap</span>(<span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Other</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">81</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// swap pointers</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">82</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Swap</span>(<span class="cm-variable">_Other</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">83</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">84</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">85</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">get</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">86</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return pointer to resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">87</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Get</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">88</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">89</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">90</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">typename</span> <span class="cm-variable">add_reference</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span>::<span class="cm-variable">type</span> <span class="cm-keyword">operator</span><span class="cm-operator">*</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">91</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return reference to resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">92</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Get</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">93</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">94</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">95</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-keyword">operator</span><span class="cm-operator">-&gt;</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">96</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return pointer to resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">97</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Get</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">98</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">99</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">100</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">unique</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">101</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return true if no other shared_ptr object owns this resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">102</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">use_count</span>() <span class="cm-operator">==</span> <span class="cm-number">1</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">103</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">104</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">105</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">explicit</span> <span class="cm-keyword">operator</span> <span class="cm-type">bool</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">106</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// test if shared_ptr object owns no resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">107</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Get</span>() <span class="cm-operator">!=</span> <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">108</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">109</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>};</span></pre></div></div></div></div></div></div><div style="top: 2928px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 2958px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 32px;"></div></div></div></div></wiz_code_mirror></div><div><br></div><div class="wiz-code-container" id="wiz_cm_1525365489142_1989" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">   
            
template&lt;class _Ty&gt;
	class weak_ptr
		: public _Ptr_base&lt;_Ty&gt;
	{	// class for pointer to reference counted resource
public:
	weak_ptr() _NOEXCEPT
		{	// construct empty weak_ptr object
		}

	weak_ptr(const weak_ptr&amp; _Other) _NOEXCEPT
		{	// construct weak_ptr object for resource pointed to by _Other
		this-&gt;_Resetw(_Other);
		}

	template&lt;class _Ty2,
		class = typename enable_if&lt;is_convertible&lt;_Ty2 *, _Ty *&gt;::value,
			void&gt;::type&gt;
		weak_ptr(const shared_ptr&lt;_Ty2&gt;&amp; _Other) _NOEXCEPT
		{	// construct weak_ptr object for resource owned by _Other
		this-&gt;_Resetw(_Other);
		}

	template&lt;class _Ty2,
		class = typename enable_if&lt;is_convertible&lt;_Ty2 *, _Ty *&gt;::value,
			void&gt;::type&gt;
		weak_ptr(const weak_ptr&lt;_Ty2&gt;&amp; _Other) _NOEXCEPT
		{	// construct weak_ptr object for resource pointed to by _Other
		this-&gt;_Resetw(_Other.lock());
		}

	~weak_ptr() _NOEXCEPT
		{	// release resource
		this-&gt;_Decwref();
		}

	weak_ptr&amp; operator=(const weak_ptr&amp; _Right) _NOEXCEPT
		{	// assign from _Right
		this-&gt;_Resetw(_Right);
		return (*this);
		}

	template&lt;class _Ty2&gt;
		weak_ptr&amp; operator=(const weak_ptr&lt;_Ty2&gt;&amp; _Right) _NOEXCEPT
		{	// assign from _Right
		this-&gt;_Resetw(_Right.lock());
		return (*this);
		}

	template&lt;class _Ty2&gt;
		weak_ptr&amp; operator=(const shared_ptr&lt;_Ty2&gt;&amp; _Right) _NOEXCEPT
		{	// assign from _Right
		this-&gt;_Resetw(_Right);
		return (*this);
		}

	void reset() _NOEXCEPT
		{	// release resource, convert to null weak_ptr object
		this-&gt;_Resetw();
		}

	void swap(weak_ptr&amp; _Other) _NOEXCEPT
		{	// swap pointers
		this-&gt;_Swap(_Other);
		}

	bool expired() const _NOEXCEPT
		{	// return true if resource no longer exists
		return (this-&gt;_Expired());
		}

	shared_ptr&lt;_Ty&gt; lock() const _NOEXCEPT
		{	// convert to shared_ptr
		return (shared_ptr&lt;_Ty&gt;(*this, false));
		}
	};</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489142_1989"><div style="left: 33px; top: 1764.56px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 2137px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 4px; top: 1744.56px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span> &nbsp; </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-def">weak_ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>: <span class="cm-keyword">public</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// class for pointer to reference counted resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct empty weak_ptr object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span>(<span class="cm-keyword">const</span> <span class="cm-variable">weak_ptr</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Other</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct weak_ptr object for resource pointed to by _Other</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Other</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-operator">=</span> <span class="cm-keyword">typename</span> <span class="cm-variable">enable_if</span><span class="cm-operator">&lt;</span><span class="cm-variable">is_convertible</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span> <span class="cm-operator">*</span>, <span class="cm-variable">_Ty</span> <span class="cm-operator">*&gt;</span>::<span class="cm-variable">value</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span><span class="cm-operator">&gt;</span>::<span class="cm-variable">type</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span>(<span class="cm-keyword">const</span> <span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct weak_ptr object for resource owned by _Other</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Other</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">24</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">25</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">26</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-operator">=</span> <span class="cm-keyword">typename</span> <span class="cm-variable">enable_if</span><span class="cm-operator">&lt;</span><span class="cm-variable">is_convertible</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span> <span class="cm-operator">*</span>, <span class="cm-variable">_Ty</span> <span class="cm-operator">*&gt;</span>::<span class="cm-variable">value</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">27</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span><span class="cm-operator">&gt;</span>::<span class="cm-variable">type</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">28</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span>(<span class="cm-keyword">const</span> <span class="cm-variable">weak_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">29</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct weak_ptr object for resource pointed to by _Other</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">30</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">lock</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">31</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">32</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">33</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">~weak_ptr</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">34</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">35</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Decwref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">36</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">37</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">38</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-keyword">const</span> <span class="cm-variable">weak_ptr</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">39</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// assign from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">40</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Right</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">41</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">42</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">43</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">44</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">45</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-keyword">const</span> <span class="cm-variable">weak_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">46</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// assign from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">47</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Right</span>.<span class="cm-variable">lock</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">48</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">49</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">50</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">51</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">52</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">weak_ptr</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-keyword">const</span> <span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">53</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// assign from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">54</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Right</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">55</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">56</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">57</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">58</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">reset</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">59</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource, convert to null weak_ptr object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">60</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Resetw</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">61</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -29px; width: 29px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">62</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">63</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">swap</span>(<span class="cm-variable">weak_ptr</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Other</span>) <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">64</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// swap pointers</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">65</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Swap</span>(<span class="cm-variable">_Other</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">66</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">67</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">68</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">expired</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">69</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return true if resource no longer exists</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">70</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-keyword">this</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Expired</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">71</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">72</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">73</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span> <span class="cm-variable">lock</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">74</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// convert to shared_ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">75</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">shared_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>, <span class="cm-atom">false</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">76</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">77</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>};</span></pre></div></div></div></div></div></div><div style="top: 2137px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 2167px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div>&nbsp; &nbsp; 从这里可以看出来shared_ptr和weak_ptr里面本身并没有成员变量，提供的是对外的接口。shared_ptr可以对外提供模拟内部指针的操作，而weak_ptr是用来提供获取shared_ptr的接口。</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; 具体用来记录保存内部指针和使用次数是他们的共同<span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">父类_Ptr_base：</span></div><div class="wiz-code-container" id="wiz_cm_1525365489141_1497" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">template&lt;class _Ty&gt;
	class _Ptr_base
	{	// base class for shared_ptr and weak_ptr
public:
	typedef _Ptr_base&lt;_Ty&gt; _Myt;
	typedef _Ty element_type;

	_Ptr_base()
		: _Ptr(0), _Rep(0)
		{	// construct
		}

	_Ptr_base(_Myt&amp;&amp; _Right)
		: _Ptr(0), _Rep(0)
		{	// construct _Ptr_base object that takes resource from _Right
		_Assign_rv(_STD forward&lt;_Myt&gt;(_Right));
		}

	template&lt;class _Ty2&gt;
		_Ptr_base(_Ptr_base&lt;_Ty2&gt;&amp;&amp; _Right)
		: _Ptr(_Right._Ptr), _Rep(_Right._Rep)
		{	// construct _Ptr_base object that takes resource from _Right
		_Right._Ptr = 0;
		_Right._Rep = 0;
		}

	_Myt&amp; operator=(_Myt&amp;&amp; _Right)
		{	// construct _Ptr_base object that takes resource from _Right
		_Assign_rv(_STD forward&lt;_Myt&gt;(_Right));
		return (*this);
		}

	void _Assign_rv(_Myt&amp;&amp; _Right)
		{	// assign by moving _Right
		if (this != &amp;_Right)
			_Swap(_Right);
		}

	long use_count() const _NOEXCEPT
		{	// return use count
		return (_Rep ? _Rep-&gt;_Use_count() : 0);
		}

	void _Swap(_Ptr_base&amp; _Right)
		{	// swap pointers
		_STD swap(_Rep, _Right._Rep);
		_STD swap(_Ptr, _Right._Ptr);
		}

	template&lt;class _Ty2&gt;
		bool owner_before(const _Ptr_base&lt;_Ty2&gt;&amp; _Right) const
		{	// compare addresses of manager objects
		return (_Rep &lt; _Right._Rep);
		}

	void *_Get_deleter(const _XSTD2 type_info&amp; _Typeid) const
		{	// return pointer to deleter object if its type is _Typeid
		return (_Rep ? _Rep-&gt;_Get_deleter(_Typeid) : 0);
		}

	_Ty *_Get() const
		{	// return pointer to resource
		return (_Ptr);
		}

	bool _Expired() const
		{	// test if expired
		return (!_Rep || _Rep-&gt;_Expired());
		}

	void _Decref()
		{	// decrement reference count
		if (_Rep != 0)
			_Rep-&gt;_Decref();
		}

	void _Reset()
		{	// release resource
		_Reset(0, 0);
		}

	template&lt;class _Ty2&gt;
		void _Reset(const _Ptr_base&lt;_Ty2&gt;&amp; _Other)
		{	// release resource and take ownership of _Other._Ptr
		_Reset(_Other._Ptr, _Other._Rep);
		}

	template&lt;class _Ty2&gt;
		void _Reset(const _Ptr_base&lt;_Ty2&gt;&amp; _Other, bool _Throw)
		{	// release resource and take ownership from weak_ptr _Other._Ptr
		_Reset(_Other._Ptr, _Other._Rep, _Throw);
		}

	template&lt;class _Ty2&gt;
		void _Reset(const _Ptr_base&lt;_Ty2&gt;&amp; _Other, const _Static_tag&amp;)
		{	// release resource and take ownership of _Other._Ptr
		_Reset(static_cast&lt;_Ty *&gt;(_Other._Ptr), _Other._Rep);
		}

	template&lt;class _Ty2&gt;
		void _Reset(const _Ptr_base&lt;_Ty2&gt;&amp; _Other, const _Const_tag&amp;)
		{	// release resource and take ownership of _Other._Ptr
		_Reset(const_cast&lt;_Ty *&gt;(_Other._Ptr), _Other._Rep);
		}

	template&lt;class _Ty2&gt;
		void _Reset(const _Ptr_base&lt;_Ty2&gt;&amp; _Other, const _Dynamic_tag&amp;)
		{	// release resource and take ownership of _Other._Ptr
		_Ty *_Ptr = dynamic_cast&lt;_Ty *&gt;(_Other._Ptr);
		if (_Ptr)
			_Reset(_Ptr, _Other._Rep);
		else
			_Reset();
		}

	template&lt;class _Ty2&gt;
		void _Reset(auto_ptr&lt;_Ty2&gt;&amp;&amp; _Other)
		{	// release resource and take _Other.get()
		_Ty2 *_Px = _Other.get();
		_Reset0(_Px, new _Ref_count&lt;_Ty&gt;(_Px));
		_Other.release();
		_Enable_shared(_Px, _Rep);
		}

	template&lt;class _Ty2&gt;
		void _Reset(_Ty *_Ptr, const _Ptr_base&lt;_Ty2&gt;&amp; _Other)
		{	// release resource and alias _Ptr with _Other_rep
		_Reset(_Ptr, _Other._Rep);
		}

	void _Reset(_Ty *_Other_ptr, _Ref_count_base *_Other_rep)
		{	// release resource and take _Other_ptr through _Other_rep
		if (_Other_rep)
			_Other_rep-&gt;_Incref();
		_Reset0(_Other_ptr, _Other_rep);
		}

	void _Reset(_Ty *_Other_ptr, _Ref_count_base *_Other_rep, bool _Throw)
		{	// take _Other_ptr through _Other_rep from weak_ptr if not expired
			// otherwise, leave in default state if !_Throw,
			// otherwise throw exception
		if (_Other_rep &amp;&amp; _Other_rep-&gt;_Incref_nz())
			_Reset0(_Other_ptr, _Other_rep);
		else if (_Throw)
			_THROW_NCEE(bad_weak_ptr, 0);
		}

	void _Reset0(_Ty *_Other_ptr, _Ref_count_base *_Other_rep)
		{	// release resource and take new resource
		if (_Rep != 0)
			_Rep-&gt;_Decref();
		_Rep = _Other_rep;
		_Ptr = _Other_ptr;
		}

	void _Decwref()
		{	// decrement weak reference count
		if (_Rep != 0)
			_Rep-&gt;_Decwref();
		}

	void _Resetw()
		{	// release weak reference to resource
		_Resetw((_Ty *)0, 0);
		}

	template&lt;class _Ty2&gt;
		void _Resetw(const _Ptr_base&lt;_Ty2&gt;&amp; _Other)
		{	// release weak reference to resource and take _Other._Ptr
		_Resetw(_Other._Ptr, _Other._Rep);
		}

	template&lt;class _Ty2&gt;
		void _Resetw(const _Ty2 *_Other_ptr, _Ref_count_base *_Other_rep)
		{	// point to _Other_ptr through _Other_rep
		_Resetw(const_cast&lt;_Ty2*&gt;(_Other_ptr), _Other_rep);
		}

	template&lt;class _Ty2&gt;
		void _Resetw(_Ty2 *_Other_ptr, _Ref_count_base *_Other_rep)
		{	// point to _Other_ptr through _Other_rep
		if (_Other_rep)
			_Other_rep-&gt;_Incwref();
		if (_Rep != 0)
			_Rep-&gt;_Decwref();
		_Rep = _Other_rep;
		_Ptr = _Other_ptr;
		}

private:
	_Ty *_Ptr;
	_Ref_count_base *_Rep;
	template&lt;class _Ty0&gt;
		friend class _Ptr_base;
	};</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489141_1497"><div style="left: 36px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 32px; border-right-width: 30px; min-height: 5389px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>195</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>195</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -32px; width: 32px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-def">_Ptr_base</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// base class for shared_ptr and weak_ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">typedef</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span> <span class="cm-variable">_Myt</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">6</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">typedef</span> <span class="cm-variable">_Ty</span> <span class="cm-variable">element_type</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">7</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">8</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ptr_base</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>: <span class="cm-variable">_Ptr</span>(<span class="cm-number">0</span>), <span class="cm-variable">_Rep</span>(<span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">10</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">11</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">12</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ptr_base</span>(<span class="cm-variable">_Myt</span><span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">_Right</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>: <span class="cm-variable">_Ptr</span>(<span class="cm-number">0</span>), <span class="cm-variable">_Rep</span>(<span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">15</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct _Ptr_base object that takes resource from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">16</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Assign_rv</span>(<span class="cm-variable">_STD</span> <span class="cm-variable">forward</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Myt</span><span class="cm-operator">&gt;</span>(<span class="cm-variable">_Right</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">17</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">18</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">19</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Ptr_base</span>(<span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;&amp;</span> <span class="cm-variable">_Right</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">21</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>: <span class="cm-variable">_Ptr</span>(<span class="cm-variable">_Right</span>.<span class="cm-variable">_Ptr</span>), <span class="cm-variable">_Rep</span>(<span class="cm-variable">_Right</span>.<span class="cm-variable">_Rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">22</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct _Ptr_base object that takes resource from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">23</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Right</span>.<span class="cm-variable">_Ptr</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">24</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Right</span>.<span class="cm-variable">_Rep</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">25</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">26</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">27</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Myt</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-variable">_Myt</span><span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">_Right</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">28</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct _Ptr_base object that takes resource from _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">29</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Assign_rv</span>(<span class="cm-variable">_STD</span> <span class="cm-variable">forward</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Myt</span><span class="cm-operator">&gt;</span>(<span class="cm-variable">_Right</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">30</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">31</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">32</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">33</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Assign_rv</span>(<span class="cm-variable">_Myt</span><span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">_Right</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">34</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// assign by moving _Right</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">35</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-keyword">this</span> <span class="cm-operator">!=</span> <span class="cm-operator">&amp;</span><span class="cm-variable">_Right</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">36</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Swap</span>(<span class="cm-variable">_Right</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">37</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">38</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">39</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">long</span> <span class="cm-variable">use_count</span>() <span class="cm-keyword">const</span> <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">40</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return use count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">41</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">?</span> <span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Use_count</span>() : <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">42</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">43</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">44</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Swap</span>(<span class="cm-variable">_Ptr_base</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Right</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">45</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// swap pointers</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">46</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_STD</span> <span class="cm-variable">swap</span>(<span class="cm-variable">_Rep</span>, <span class="cm-variable">_Right</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">47</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_STD</span> <span class="cm-variable">swap</span>(<span class="cm-variable">_Ptr</span>, <span class="cm-variable">_Right</span>.<span class="cm-variable">_Ptr</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">48</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">49</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">50</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">51</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">owner_before</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Right</span>) <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">52</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// compare addresses of manager objects</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">53</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">_Right</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">54</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">55</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">56</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-type">*</span><span class="cm-variable">_Get_deleter</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_XSTD2</span> <span class="cm-variable">type_info</span><span class="cm-operator">&amp;</span> <span class="cm-variable">_Typeid</span>) <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">57</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return pointer to deleter object if its type is _Typeid</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">58</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">?</span> <span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Get_deleter</span>(<span class="cm-variable">_Typeid</span>) : <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">59</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">60</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">61</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Get</span>() <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">62</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return pointer to resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">63</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Ptr</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">64</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">65</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">66</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">_Expired</span>() <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">67</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// test if expired</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">68</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-operator">!</span><span class="cm-variable">_Rep</span> <span class="cm-operator">||</span> <span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Expired</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">69</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">70</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">71</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Decref</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">72</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// decrement reference count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">73</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">!=</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">74</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Decref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">75</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">76</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">77</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">78</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">79</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-number">0</span>, <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">80</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">81</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">82</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">83</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">84</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take ownership of _Other._Ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">85</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">_Ptr</span>, <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">86</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">87</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">88</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">89</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>, <span class="cm-type">bool</span> <span class="cm-variable">_Throw</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">90</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take ownership from weak_ptr _Other._Ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">91</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">_Ptr</span>, <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>, <span class="cm-variable">_Throw</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">92</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">93</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">94</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">95</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>, <span class="cm-keyword">const</span> <span class="cm-variable">_Static_tag</span><span class="cm-operator">&amp;</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">96</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take ownership of _Other._Ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">97</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-keyword">static_cast</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span> <span class="cm-operator">*&gt;</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">_Ptr</span>), <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">98</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">99</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">100</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">101</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>, <span class="cm-keyword">const</span> <span class="cm-variable">_Const_tag</span><span class="cm-operator">&amp;</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">102</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take ownership of _Other._Ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">103</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-keyword">const_cast</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span> <span class="cm-operator">*&gt;</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">_Ptr</span>), <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">104</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">105</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">106</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">107</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>, <span class="cm-keyword">const</span> <span class="cm-variable">_Dynamic_tag</span><span class="cm-operator">&amp;</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">108</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take ownership of _Other._Ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">109</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Ptr</span> <span class="cm-operator">=</span> <span class="cm-keyword">dynamic_cast</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span> <span class="cm-operator">*&gt;</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">_Ptr</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">110</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Ptr</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">111</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-variable">_Ptr</span>, <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">112</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">else</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">113</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">114</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">115</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">116</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">117</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-variable">auto_ptr</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;&amp;</span> <span class="cm-variable">_Other</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">118</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take _Other.get()</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">119</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Ty2</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span> <span class="cm-operator">=</span> <span class="cm-variable">_Other</span>.<span class="cm-variable">get</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">120</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset0</span>(<span class="cm-variable">_Px</span>, <span class="cm-keyword">new</span> <span class="cm-variable">_Ref_count</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty</span><span class="cm-operator">&gt;</span>(<span class="cm-variable">_Px</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">121</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Other</span>.<span class="cm-variable">release</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">122</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Enable_shared</span>(<span class="cm-variable">_Px</span>, <span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">123</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">124</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">125</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">126</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Ptr</span>, <span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">127</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and alias _Ptr with _Other_rep</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">128</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset</span>(<span class="cm-variable">_Ptr</span>, <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">129</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">130</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">131</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Ref_count_base</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">132</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take _Other_ptr through _Other_rep</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">133</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Other_rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">134</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Other_rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Incref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">135</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset0</span>(<span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Other_rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">136</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">137</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">138</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset</span>(<span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Ref_count_base</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_rep</span>, <span class="cm-type">bool</span> <span class="cm-variable">_Throw</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">139</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// take _Other_ptr through _Other_rep from weak_ptr if not expired</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">140</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-comment">// otherwise, leave in default state if !_Throw,</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">141</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-comment">// otherwise throw exception</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">142</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Other_rep</span> <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">_Other_rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Incref_nz</span>())</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">143</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Reset0</span>(<span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Other_rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">144</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">else</span> <span class="cm-keyword">if</span> (<span class="cm-variable">_Throw</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">145</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_THROW_NCEE</span>(<span class="cm-variable">bad_weak_ptr</span>, <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">146</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">147</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">148</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Reset0</span>(<span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Ref_count_base</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">149</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release resource and take new resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">150</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">!=</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">151</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Decref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">152</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Rep</span> <span class="cm-operator">=</span> <span class="cm-variable">_Other_rep</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">153</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">_Other_ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">154</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">155</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">156</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Decwref</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">157</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// decrement weak reference count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">158</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">!=</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">159</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Decwref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">160</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">161</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">162</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Resetw</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">163</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release weak reference to resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">164</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Resetw</span>((<span class="cm-variable">_Ty</span> <span class="cm-operator">*</span>)<span class="cm-number">0</span>, <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">165</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">166</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">167</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">168</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Resetw</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ptr_base</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">_Other</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">169</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// release weak reference to resource and take _Other._Ptr</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">170</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Other</span>.<span class="cm-variable">_Ptr</span>, <span class="cm-variable">_Other</span>.<span class="cm-variable">_Rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">171</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">172</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">173</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">174</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Resetw</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_Ty2</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Ref_count_base</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">175</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// point to _Other_ptr through _Other_rep</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">176</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Resetw</span>(<span class="cm-keyword">const_cast</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ty2</span><span class="cm-operator">*&gt;</span>(<span class="cm-variable">_Other_ptr</span>), <span class="cm-variable">_Other_rep</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">177</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">178</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">179</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty2</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">180</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Resetw</span>(<span class="cm-variable">_Ty2</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_ptr</span>, <span class="cm-variable">_Ref_count_base</span> <span class="cm-operator">*</span><span class="cm-variable">_Other_rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">181</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// point to _Other_ptr through _Other_rep</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">182</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Other_rep</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">183</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Other_rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Incwref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">184</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Rep</span> <span class="cm-operator">!=</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">185</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Rep</span><span class="cm-operator">-&gt;</span><span class="cm-variable">_Decwref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">186</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Rep</span> <span class="cm-operator">=</span> <span class="cm-variable">_Other_rep</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">187</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">_Other_ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">188</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">189</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">190</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">private</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">191</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">192</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ref_count_base</span> <span class="cm-operator">*</span><span class="cm-variable">_Rep</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">193</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty0</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">194</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">friend</span> <span class="cm-keyword">class</span> <span class="cm-def">_Ptr_base</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">195</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>};</span></pre></div></div></div></div></div></div><div style="top: 5389px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 5419px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 32px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">可以看到这个类里面主要提供了两个成员</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp;（1）成员_Ty *_Ptr主要用来记录内部指针。&nbsp;<br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp;（2）成员_Ref_count_base *_Rep用来记录使用次数和弱指针使用次数。<br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">实际上</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_Ref_count_base *_Rep 这个指针也是new出来的，当weak_count为0时就可以删除，而使用次数是用来记录内部指针的，当使用次数为0时，就可以释放内部指针了。</span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">一些重要的成员函数：</span><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp; &nbsp;Reset &nbsp;_Decref&nbsp;_Decwref use_count等。</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp; &nbsp;&nbsp;</span></div><div>&nbsp; 再来看看类<span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_Ref_count_base的实现：</span></div><div class="wiz-code-container" id="wiz_cm_1525365489139_1486" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">class _Ref_count_base
	{	// common code for reference counting
private:
	virtual void _Destroy() = 0;
	virtual void _Delete_this() = 0;

private:
	_Atomic_counter_t _Uses;
	_Atomic_counter_t _Weaks;

protected:
	_Ref_count_base()
		{	// construct
		_Init_atomic_counter(_Uses, 1);
		_Init_atomic_counter(_Weaks, 1);
		}

public:
	virtual ~_Ref_count_base() _NOEXCEPT
		{	// ensure that derived classes can be destroyed properly
		}

	bool _Incref_nz()
		{	// increment use count if not zero, return true if successful
		for (; ; )
			{	// loop until state is known
 #if defined(_M_IX86) || defined(_M_X64) || defined(_M_CEE_PURE)
			_Atomic_integral_t _Count =
				static_cast&lt;volatile _Atomic_counter_t&amp;&gt;(_Uses);

			if (_Count == 0)
				return (false);

			if (static_cast&lt;_Atomic_integral_t&gt;(_InterlockedCompareExchange(
					reinterpret_cast&lt;volatile long *&gt;(&amp;_Uses),
					_Count + 1, _Count)) == _Count)
				return (true);

 #else /* defined(_M_IX86) || defined(_M_X64) || defined(_M_CEE_PURE) */
			_Atomic_integral_t _Count =
				_Load_atomic_counter(_Uses);

			if (_Count == 0)
				return (false);

			if (_Compare_increment_atomic_counter(_Uses, _Count))
				return (true);
 #endif /* defined(_M_IX86) || defined(_M_X64) || defined(_M_CEE_PURE) */
			}
		}

	unsigned int _Get_uses() const
		{	// return use count
		return (_Get_atomic_count(_Uses));
		}

	void _Incref()
		{	// increment use count
		_MT_INCR(_Mtx, _Uses);
		}

	void _Incwref()
		{	// increment weak reference count
		_MT_INCR(_Mtx, _Weaks);
		}

	void _Decref()
		{	// decrement use count
		if (_MT_DECR(_Mtx, _Uses) == 0)
			{	// destroy managed resource, decrement weak reference count
			_Destroy();
			_Decwref();
			}
		}

	void _Decwref()
		{	// decrement weak reference count
		if (_MT_DECR(_Mtx, _Weaks) == 0)
			_Delete_this();
		}

	long _Use_count() const
		{	// return use count
		return (_Get_uses());
		}

	bool _Expired() const
		{	// return true if _Uses == 0
		return (_Get_uses() == 0);
		}

	virtual void *_Get_deleter(const _XSTD2 type_info&amp;) const
		{	// return address of deleter object
		return (0);
		}
	};</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489139_1486"><div style="left: 33px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 2569px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>96</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>96</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -29px; width: 29px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">_Ref_count_base</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// common code for reference counting</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">private</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">virtual</span> <span class="cm-type">void</span> <span class="cm-variable">_Destroy</span>() <span class="cm-operator">=</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">virtual</span> <span class="cm-type">void</span> <span class="cm-variable">_Delete_this</span>() <span class="cm-operator">=</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">private</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Atomic_counter_t</span> <span class="cm-variable">_Uses</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Atomic_counter_t</span> <span class="cm-variable">_Weaks</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">protected</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ref_count_base</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Init_atomic_counter</span>(<span class="cm-variable">_Uses</span>, <span class="cm-number">1</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Init_atomic_counter</span>(<span class="cm-variable">_Weaks</span>, <span class="cm-number">1</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">virtual</span> <span class="cm-variable">~_Ref_count_base</span>() <span class="cm-variable">_NOEXCEPT</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// ensure that derived classes can be destroyed properly</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">_Incref_nz</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">24</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// increment use count if not zero, return true if successful</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">25</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">for</span> (; ; )</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">26</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// loop until state is known</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">27</div></div><pre class="CodeMirror-line"><span> <span class="cm-meta">#if defined(_M_IX86) || defined(_M_X64) || defined(_M_CEE_PURE)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">28</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Atomic_integral_t</span> <span class="cm-variable">_Count</span> <span class="cm-operator">=</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">29</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">static_cast</span><span class="cm-operator">&lt;</span><span class="cm-keyword">volatile</span> <span class="cm-variable">_Atomic_counter_t</span><span class="cm-operator">&amp;&gt;</span>(<span class="cm-variable">_Uses</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">30</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">31</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Count</span> <span class="cm-operator">==</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">32</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-atom">false</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">33</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">34</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-keyword">static_cast</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Atomic_integral_t</span><span class="cm-operator">&gt;</span>(<span class="cm-variable">_InterlockedCompareExchange</span>(</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">35</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">reinterpret_cast</span><span class="cm-operator">&lt;</span><span class="cm-keyword">volatile</span> <span class="cm-type">long</span> <span class="cm-type">*</span><span class="cm-operator">&gt;</span>(<span class="cm-operator">&amp;</span><span class="cm-variable">_Uses</span>),</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">36</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Count</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>, <span class="cm-variable">_Count</span>)) <span class="cm-operator">==</span> <span class="cm-variable">_Count</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">37</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-atom">true</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">38</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">39</div></div><pre class="CodeMirror-line"><span> <span class="cm-meta">#else </span><span class="cm-comment">/* defined(_M_IX86) || defined(_M_X64) || defined(_M_CEE_PURE) */</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">40</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Atomic_integral_t</span> <span class="cm-variable">_Count</span> <span class="cm-operator">=</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">41</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Load_atomic_counter</span>(<span class="cm-variable">_Uses</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">42</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">43</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Count</span> <span class="cm-operator">==</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">44</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-atom">false</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">45</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">46</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_Compare_increment_atomic_counter</span>(<span class="cm-variable">_Uses</span>, <span class="cm-variable">_Count</span>))</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">47</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-atom">true</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">48</div></div><pre class="CodeMirror-line"><span> <span class="cm-meta">#endif </span><span class="cm-comment">/* defined(_M_IX86) || defined(_M_X64) || defined(_M_CEE_PURE) */</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">49</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">50</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">51</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">52</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">unsigned</span> <span class="cm-type">int</span> <span class="cm-variable">_Get_uses</span>() <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">53</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return use count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">54</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Get_atomic_count</span>(<span class="cm-variable">_Uses</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">55</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">56</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">57</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Incref</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">58</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// increment use count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">59</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_MT_INCR</span>(<span class="cm-variable">_Mtx</span>, <span class="cm-variable">_Uses</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">60</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">61</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">62</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Incwref</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">63</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// increment weak reference count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">64</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_MT_INCR</span>(<span class="cm-variable">_Mtx</span>, <span class="cm-variable">_Weaks</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">65</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">66</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">67</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Decref</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">68</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// decrement use count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">69</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_MT_DECR</span>(<span class="cm-variable">_Mtx</span>, <span class="cm-variable">_Uses</span>) <span class="cm-operator">==</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">70</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// destroy managed resource, decrement weak reference count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">71</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Destroy</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">72</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Decwref</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">73</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">74</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">75</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">76</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">_Decwref</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">77</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// decrement weak reference count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">78</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">_MT_DECR</span>(<span class="cm-variable">_Mtx</span>, <span class="cm-variable">_Weaks</span>) <span class="cm-operator">==</span> <span class="cm-number">0</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">79</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Delete_this</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">80</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">81</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">82</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">long</span> <span class="cm-variable">_Use_count</span>() <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">83</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return use count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">84</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Get_uses</span>());</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">85</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">86</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">87</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">_Expired</span>() <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">88</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return true if _Uses == 0</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">89</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-variable">_Get_uses</span>() <span class="cm-operator">==</span> <span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">90</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">91</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">92</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">virtual</span> <span class="cm-type">void</span> <span class="cm-type">*</span><span class="cm-variable">_Get_deleter</span>(<span class="cm-keyword">const</span> <span class="cm-variable">_XSTD2</span> <span class="cm-variable">type_info</span><span class="cm-operator">&amp;</span>) <span class="cm-keyword">const</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">93</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// return address of deleter object</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">94</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> (<span class="cm-number">0</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">95</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">96</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>};</span></pre></div></div></div></div></div></div><div style="top: 2569px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 2599px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp;&nbsp;</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">在这个</span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_Ref_count_base</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">类中提供了</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp;&nbsp; &nbsp; _Atomic_counter_t _Uses;</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"> &nbsp; &nbsp; &nbsp;_Atomic_counter_t _Weaks;</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp;实际上就是记录的内部指针使用次数和</span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_Ref_count_base使用次数。</span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">在这里有一个简单的继承关系：_Ref_count继承自_Ref_count_base</span></span></div><div class="wiz-code-container" id="wiz_cm_1525365489138_9976" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">template&lt;class _Ty&gt;
	class _Ref_count
	: public _Ref_count_base
	{	// handle reference counting for object without deleter
public:
	_Ref_count(_Ty *_Px)
		: _Ref_count_base(), _Ptr(_Px)
		{	// construct
		}

private:
	virtual void _Destroy()
		{	// destroy managed resource
		delete _Ptr;
		}

	virtual void _Delete_this()
		{	// destroy self
		delete this;
		}

	_Ty * _Ptr;
	};</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489138_9976"><div style="left: 33px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 583px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>23</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>23</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -29px; width: 29px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">class</span> <span class="cm-def">_Ty</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">class</span> <span class="cm-def">_Ref_count</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>: <span class="cm-keyword">public</span> <span class="cm-variable">_Ref_count_base</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// handle reference counting for object without deleter</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ref_count</span>(<span class="cm-variable">_Ty</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>: <span class="cm-variable">_Ref_count_base</span>(), <span class="cm-variable">_Ptr</span>(<span class="cm-variable">_Px</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">private</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">virtual</span> <span class="cm-type">void</span> <span class="cm-variable">_Destroy</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// destroy managed resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">delete</span> <span class="cm-variable">_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">virtual</span> <span class="cm-type">void</span> <span class="cm-variable">_Delete_this</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// destroy self</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">delete</span> <span class="cm-keyword">this</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ty</span> <span class="cm-operator">*</span> <span class="cm-variable">_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>};</span></pre></div></div></div></div></div></div><div style="top: 583px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 613px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div>这里_Ptr_base中的_Ref_count_base* &nbsp;_Rep成员是使用的new &nbsp;_Ref_count。</div><div class="wiz-code-container" id="wiz_cm_1525365489136_7438" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">void _Resetp(_Ux *_Px)
{	// release, take ownership of _Px
    _TRY_BEGIN	// allocate control block and reset
        _Resetp0(_Px, new _Ref_count&lt;_Ux&gt;(_Px));
    _CATCH_ALL	// allocation failed, delete resource
        delete _Px;
    _RERAISE;
    _CATCH_END
}</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489136_7438"><div style="left: 33px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 224px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>9</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>9</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -29px; width: 29px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-type">void</span> <span class="cm-def">_Resetp</span>(<span class="cm-variable">_Ux</span> <span class="cm-operator">*</span><span class="cm-variable">_Px</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span>{<span class="cm-tab">   </span><span class="cm-comment">// release, take ownership of _Px</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp;<span class="cm-variable">_TRY_BEGIN</span><span class="cm-tab">  </span><span class="cm-comment">// allocate control block and reset</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">_Resetp0</span>(<span class="cm-variable">_Px</span>, <span class="cm-keyword">new</span> <span class="cm-variable">_Ref_count</span><span class="cm-operator">&lt;</span><span class="cm-variable">_Ux</span><span class="cm-operator">&gt;</span>(<span class="cm-variable">_Px</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp;<span class="cm-variable">_CATCH_ALL</span><span class="cm-tab">  </span><span class="cm-comment">// allocation failed, delete resource</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword">delete</span> <span class="cm-variable">_Px</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp;<span class="cm-variable">_RERAISE</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line"><span> &nbsp; &nbsp;<span class="cm-variable">_CATCH_END</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line"><span>}</span></pre></div></div></div></div></div></div><div style="top: 224px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 254px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div>然后使用子类转父类，而这个类实现了<span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_Ref_count_base*的两个接口函数：</span></div><div>&nbsp; &nbsp; virtual void _Destroy() = 0;<br></div><div>&nbsp; &nbsp; virtual void _Delete_this() = 0;<br></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">这个引用的次数：</span></div><div class="wiz-code-container" id="wiz_cm_1525365489079_5791" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">	_Ref_count_base()
		{	// construct
		_Init_atomic_counter(_Uses, 1);
		_Init_atomic_counter(_Weaks, 1);
		}</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365489079_5791"><div style="left: 33px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 128px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>5</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>5</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -29px; width: 29px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">_Ref_count_base</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>{<span class="cm-tab">   </span><span class="cm-comment">// construct</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Init_atomic_counter</span>(<span class="cm-variable">_Uses</span>, <span class="cm-number">1</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">_Init_atomic_counter</span>(<span class="cm-variable">_Weaks</span>, <span class="cm-number">1</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div></div></div></div></div></div><div style="top: 128px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 158px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">接下来分析内存结构：</span></div><div><img style="vertical-align: bottom; max-width: 100%;" src="index_files/127c8569-7b95-4f0e-8bd6-b392e462031a.png"></div><div><br></div><div>这里有两个成员，分别是</div><div>&nbsp;_Ptr(内部指针) ：0x71b8d0</div><div>&nbsp;_Rep(引用base)：0x0071b910</div><div>&nbsp;而引用base这里实际上是_Ref_count对象，因为有虚函数，所以这里存在虚表指针：</div><div>&nbsp;</div><div><img class="wiz-lazyload" style="vertical-align: bottom; max-width: 100%;" src="index_files/ceed5ffa-7608-4150-8071-f82766ff4c8e.png"></div><div><br></div><div>前4个字节是虚表指针</div><div>中间两个4字节分别是内部对象计数器和自身的计数器。</div><div>最后4个字节是内部对象指针。</div><div><br></div><div>最后说一下计数器增减的规则：</div><div>初始化及增加的情形：</div><div>1.当创建一个新的shared_ptr时，<span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">内部对象计数器和</span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">自身的计数器均置1.</span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">2.当将另外一个</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">shared_ptr赋值给新的</span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">shared_ptr时，内部对象计数器+1,自身计数器不变。</span></span></span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">3.当</span></span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">将另外一个</span></span></span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">shared_ptr赋值给新的weak</span></span></span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_ptr时,</span></span></span></span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent:0px;font-style:normal;font-weight:normal;display:inline !important">内部对象计数器不变,自身计数器+1。</span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent:0px;font-style:normal;font-weight:normal;display:inline !important">4.当从</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent:0px;font-style:normal;font-weight:normal;display:inline !important">weak</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent:0px;font-style:normal;font-weight:normal;display:inline !important">_ptr获取一个</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent:0px;font-style:normal;font-weight:normal;display:inline !important">shared_ptr时，</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent:0px;font-style:normal;font-weight:normal;display:inline !important">内部对象计数器+1,自身计数器不变。</span></span></div><div><br></div><div>减少的情形：</div><div>1. 当一个shared_ptr析构时，内部<span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">对象计数器-1。当内部对象计数器减为0时，则释放内部对象，并将</span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">自身计数器-1</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">。</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">2. 当一个</span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">weak</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_ptr析构时，</span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">自身计数器-1。当</span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">自身计数器减为0时，则释放自身</span></span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">_Ref_count*对象</span></span></span></span></span><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">。</span></span></span></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></span></span></span></div><div>那么自己模拟强弱指针，写成模板：</div><div class="wiz-code-container" id="wiz_cm_1525365635461_7197" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">#pragma once

class CRefCount
{
public:
	CRefCount(){
		m_nUsedCount = 1;
		m_nWeakCount = 1; 
	}

	void incUsed(){
		m_nUsedCount++;
	}

	int decUsed(){
		m_nUsedCount--;
		return m_nUsedCount;
	}

	void incWeak(){
		m_nWeakCount++;
	}

	int decWeak(){
		m_nWeakCount--;

		return m_nWeakCount;
	}

	int getUsed(){
		return m_nUsedCount;
	}

private:
	int m_nUsedCount; //强指针引用次数
	int m_nWeakCount; //弱指针引用次数
};

template&lt;typename T&gt;
class CMySmartPtrBase
{
public:
	CMySmartPtrBase(){};
	~CMySmartPtrBase(){};

	void destroy(){
		delete m_Ptr;
	}

	void release(){
		if (m_pRef != nullptr &amp;&amp; m_pRef-&gt;decWeak() == 0){
			delete m_pRef;
		}
	}

protected:
	T* m_Ptr;
	CRefCount* m_pRef;
};

//强指针类型
template&lt;typename T&gt;
class CMyWeakPtr;

template&lt;typename T&gt;
class CStrongPtr : public CMySmartPtrBase&lt;T&gt;
{
	friend class CMyWeakPtr&lt;T&gt;;
public:
	CStrongPtr(){
		m_Ptr = nullptr;
		m_pRef = nullptr;
	}

	explicit CStrongPtr(T* p){
		m_Ptr = p;
		m_pRef = new CRefCount;
	}

	CStrongPtr(CStrongPtr&lt;T&gt;&amp; obj){

		m_Ptr = obj.m_Ptr;
		obj.m_pRef-&gt;incUsed();
		m_pRef = obj.m_pRef;
	}

	CStrongPtr&lt;T&gt;&amp; operator=(CStrongPtr&lt;T&gt;&amp; obj){

		if (m_pRef != nullptr &amp;&amp; m_pRef-&gt;decUsed() == 0){
			destroy();
			release();
		}

		m_Ptr = obj.m_Ptr;
		obj.m_pRef-&gt;incUsed();
		m_pRef = obj.m_pRef;

		return *this;
	}

	CStrongPtr(CMyWeakPtr&lt;T&gt;&amp; obj){
		m_Ptr = obj.m_Ptr;
		obj.m_pRef-&gt;incUsed();
		m_pRef = obj.m_pRef;
	}

	~CStrongPtr(){
		if (m_pRef != nullptr &amp;&amp; m_pRef-&gt;decUsed() == 0){
			destroy();
			release();
		}
	}

	T&amp; operator*(){
		return *m_Ptr;
	}

	T* operator-&gt;(){
		return m_Ptr;
	}

	T* get(){
		return m_Ptr;
	}
};


//强指针类型
template&lt;typename T&gt;
class CMyWeakPtr : public CMySmartPtrBase&lt;T&gt;
{
public:
	friend class CStrongPtr&lt;T&gt;;

	CMyWeakPtr(){
		m_Ptr = nullptr;
		m_pRef = nullptr;
	}

	CMyWeakPtr(CStrongPtr&lt;T&gt;&amp; obj){
		//release();

		m_Ptr = obj.m_Ptr;
		obj.m_pRef-&gt;incWeak();
		m_pRef = obj.m_pRef;
	}

	CMyWeakPtr&lt;T&gt;&amp; operator = (CStrongPtr&lt;T&gt;&amp; obj){
		release();

		m_Ptr = obj.m_Ptr;
		obj.m_pRef-&gt;incWeak();
		m_pRef = obj.m_pRef;

		return *this;
	}

	CMyWeakPtr(CMyWeakPtr&lt;T&gt;&amp; obj){

		m_Ptr = obj.m_Ptr;
		obj.m_pRef-&gt;incWeak();
		m_pRef = obj.m_pRef;
	}

	~CMyWeakPtr(){
		release();
	}

	CStrongPtr&lt;T&gt;&amp; lock(){
		if (m_pRef == nullptr){
			return CStrongPtr&lt;T&gt;();
		}

		return CStrongPtr&lt;T&gt;(*this);
	}

	bool IsExpried(){
		if (m_pRef == nullptr){
			return true;
		}

		return m_pRef-&gt;getUsed() == 0;
	}
};
</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365635461_7197"><div style="left: 36px; top: 20px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off"></textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 32px; border-right-width: 30px; min-height: 4518px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><pre>x</pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="wiz-hide wiz_CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code"><div class="CodeMirror-activeline" style="position: relative;"><div class="wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -32px; width: 32px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-meta">#pragma once</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">2</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">3</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CRefCount</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">4</div></div><pre class="CodeMirror-line"><span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">6</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CRefCount</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_nUsedCount</span> <span class="cm-operator">=</span> <span class="cm-number">1</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">8</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_nWeakCount</span> <span class="cm-operator">=</span> <span class="cm-number">1</span>; </span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">10</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">11</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">incUsed</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">12</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_nUsedCount</span><span class="cm-operator">++</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">14</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">15</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">int</span> <span class="cm-variable">decUsed</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">16</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_nUsedCount</span><span class="cm-operator">--</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">17</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">m_nUsedCount</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">18</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">19</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">incWeak</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">21</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_nWeakCount</span><span class="cm-operator">++</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">22</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">23</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">24</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">int</span> <span class="cm-variable">decWeak</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">25</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_nWeakCount</span><span class="cm-operator">--</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">26</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">27</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">m_nWeakCount</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">28</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">29</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">30</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">int</span> <span class="cm-variable">getUsed</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">31</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">m_nUsedCount</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">32</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">33</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">34</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">private</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">35</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">int</span> <span class="cm-variable">m_nUsedCount</span>; <span class="cm-comment">//强指针引用次数</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">36</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">int</span> <span class="cm-variable">m_nWeakCount</span>; <span class="cm-comment">//弱指针引用次数</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">37</div></div><pre class="CodeMirror-line"><span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">38</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">39</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">typename</span> <span class="cm-variable">T</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">40</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CMySmartPtrBase</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">41</div></div><pre class="CodeMirror-line"><span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">42</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">43</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CMySmartPtrBase</span>(){};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">44</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">~CMySmartPtrBase</span>(){};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">45</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">46</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">destroy</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">47</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">delete</span> <span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">48</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">49</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">50</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">release</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">51</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">m_pRef</span> <span class="cm-operator">!=</span> <span class="cm-keyword">nullptr</span> <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">decWeak</span>() <span class="cm-operator">==</span> <span class="cm-number">0</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">52</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">delete</span> <span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">53</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">54</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">55</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">56</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">protected</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">57</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">T</span><span class="cm-operator">*</span> <span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">58</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CRefCount</span><span class="cm-operator">*</span> <span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">59</div></div><pre class="CodeMirror-line"><span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">60</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">61</div></div><pre class="CodeMirror-line"><span><span class="cm-comment">//强指针类型</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">62</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">typename</span> <span class="cm-variable">T</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">63</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CMyWeakPtr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">64</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">65</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">typename</span> <span class="cm-variable">T</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">66</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CStrongPtr</span> : <span class="cm-keyword">public</span> <span class="cm-variable">CMySmartPtrBase</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">67</div></div><pre class="CodeMirror-line"><span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">68</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">friend</span> <span class="cm-keyword">class</span> <span class="cm-def">CMyWeakPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">69</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">70</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">71</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-keyword">nullptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">72</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-keyword">nullptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">73</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">74</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">75</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">explicit</span> <span class="cm-variable">CStrongPtr</span>(<span class="cm-variable">T</span><span class="cm-operator">*</span> <span class="cm-variable">p</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">76</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">p</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">77</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">CRefCount</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">78</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">79</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">80</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span>(<span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">obj</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">81</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">82</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">83</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">incUsed</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">84</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">85</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">86</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">87</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">=</span>(<span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">obj</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">88</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">89</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">m_pRef</span> <span class="cm-operator">!=</span> <span class="cm-keyword">nullptr</span> <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">decUsed</span>() <span class="cm-operator">==</span> <span class="cm-number">0</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">90</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">destroy</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">91</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">release</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">92</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">93</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">94</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">95</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">incUsed</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">96</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">97</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">98</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-operator">*</span><span class="cm-keyword">this</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">99</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">100</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">101</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span>(<span class="cm-variable">CMyWeakPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">obj</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">102</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">103</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">incUsed</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">104</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">105</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">106</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">107</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">~CStrongPtr</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">108</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">m_pRef</span> <span class="cm-operator">!=</span> <span class="cm-keyword">nullptr</span> <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">decUsed</span>() <span class="cm-operator">==</span> <span class="cm-number">0</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">109</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">destroy</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">110</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">release</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">111</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">112</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">113</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">114</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">T</span><span class="cm-operator">&amp;</span> <span class="cm-keyword">operator</span><span class="cm-operator">*</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">115</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-operator">*</span><span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">116</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">117</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">118</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">T</span><span class="cm-operator">*</span> <span class="cm-keyword">operator</span><span class="cm-operator">-&gt;</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">119</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">120</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">121</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">122</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">T</span><span class="cm-operator">*</span> <span class="cm-variable">get</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">123</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">124</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">125</div></div><pre class="CodeMirror-line"><span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">126</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">127</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">128</div></div><pre class="CodeMirror-line"><span><span class="cm-comment">//强指针类型</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">129</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">template</span><span class="cm-operator">&lt;</span><span class="cm-keyword">typename</span> <span class="cm-variable">T</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">130</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CMyWeakPtr</span> : <span class="cm-keyword">public</span> <span class="cm-variable">CMySmartPtrBase</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">131</div></div><pre class="CodeMirror-line"><span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">132</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">133</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">friend</span> <span class="cm-keyword">class</span> <span class="cm-def">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">134</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">135</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CMyWeakPtr</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">136</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-keyword">nullptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">137</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-keyword">nullptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">138</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">139</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">140</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CMyWeakPtr</span>(<span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">obj</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">141</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-comment">//release();</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">142</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">143</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">144</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">incWeak</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">145</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">146</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">147</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">148</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CMyWeakPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-keyword">operator</span> <span class="cm-operator">=</span> (<span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">obj</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">149</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">release</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">150</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">151</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">152</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">incWeak</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">153</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">154</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">155</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-operator">*</span><span class="cm-keyword">this</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">156</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">157</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">158</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CMyWeakPtr</span>(<span class="cm-variable">CMyWeakPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">obj</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">159</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">160</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_Ptr</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_Ptr</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">161</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">incWeak</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">162</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_pRef</span> <span class="cm-operator">=</span> <span class="cm-variable">obj</span>.<span class="cm-variable">m_pRef</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">163</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">164</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">165</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">~CMyWeakPtr</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">166</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">release</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">167</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">168</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">169</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;&amp;</span> <span class="cm-variable">lock</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">170</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">m_pRef</span> <span class="cm-operator">==</span> <span class="cm-keyword">nullptr</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">171</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">172</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">173</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">174</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span>(<span class="cm-operator">*</span><span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">175</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">176</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">177</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">bool</span> <span class="cm-variable">IsExpried</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">178</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">if</span> (<span class="cm-variable">m_pRef</span> <span class="cm-operator">==</span> <span class="cm-keyword">nullptr</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">179</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-atom">true</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">180</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">181</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">182</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-variable">m_pRef</span><span class="cm-operator">-&gt;</span><span class="cm-variable">getUsed</span>() <span class="cm-operator">==</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">183</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">184</div></div><pre class="CodeMirror-line"><span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -32px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 24px;">185</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div></div></div></div></div></div><div style="top: 4518px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 4548px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 32px;"></div></div></div></div></wiz_code_mirror></div><div>main:</div><div class="wiz-code-container" id="wiz_cm_1525365660127_3333" data-theme="base16-light" data-mode="C++"><textarea style="display:none;">// MySharedPtr.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include "MySmartPtr.h"

class CSon;

class CTest{
public:

	void set(CStrongPtr&lt;CSon&gt; p2){
		m_p1 = p2;
	}

	CStrongPtr&lt;CSon&gt; m_p1;
};

class CSon{
public:

	void set(CStrongPtr&lt;CTest&gt; p2){
		m_p1 = p2;
	}

	CMyWeakPtr&lt;CTest&gt; m_p1;
};

void foo(){
	CTest* father = new CTest();
	CSon* son = new CSon();


	CStrongPtr&lt;CTest&gt; ptrFather(father);
	CStrongPtr&lt;CSon&gt; ptrSon(son);

	father-&gt;set(ptrSon);
	son-&gt;set(ptrFather);

}

int _tmain(int argc, _TCHAR* argv[])
{
	foo();

	return 0;
}</textarea><wiz_code_mirror><div class="CodeMirror CodeMirror-wrap cm-s-base16-light" data-id="wiz_cm_1525365660127_3333"><div style="left: 40.66px; top: 1124px; width: 3px; height: 0px; overflow: hidden; position: relative;"><textarea tabindex="0" style="padding:0px; width:1px; height:1em;" spellcheck="false" wrap="off" autocorrect="off" autocapitalize="off">class CSon;

class CTest{
public:

	void set(CStrongPtr&lt;CSon&gt; p2){
		m_p1 = p2;
	}

	CStrongPtr&lt;CSon&gt; m_p1;
};

class CSon{
public:

	void set(CStrongPtr&lt;CTest&gt; p2){
		m_p1 = p2;
	}

	CMyWeakPtr&lt;CTest&gt; m_p1;
};

void foo(){
	CTest* father = new CTest();
	CSon* son = new CSon();


	CStrongPtr&lt;CTest&gt; ptrFather(father);
	CStrongPtr&lt;CSon&gt; ptrSon(son);

	father-&gt;set(ptrSon);
	son-&gt;set(ptrFather);

}

int _tmain(int argc, _TCHAR* argv[])
{
	foo();

	return 0;
}</textarea></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; margin-left: 29px; border-right-width: 30px; min-height: 1136px;"><div style="top: 0px; position: relative;"><div class="CodeMirror-lines"><div style="outline: invert; position: relative;"><div class="CodeMirror-measure"><pre>x</pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"><div class="wiz-hide wiz_CodeMirror-selected" style="left: 4px; top: 144px; width: 428px; height: 24px; position: absolute;"></div><div class="wiz-hide wiz_CodeMirror-selected" style="left: 4px; top: 1104px; width: 7.66px; height: 24px; position: absolute;"></div><div class="wiz-hide wiz_CodeMirror-selected" style="left: 4px; top: 168px; width: 428px; height: 936px; position: absolute;"></div></div><div class="wiz-hide wiz_CodeMirror-cursors" style="visibility: hidden;"></div><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line"><span><span class="cm-comment">// MySharedPtr.cpp : 定义控制台应用程序的入口点。</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line"><span><span class="cm-comment">//</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line"><span><span class="cm-meta">#include "stdafx.h"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line"><span><span class="cm-meta">#include "MySmartPtr.h"</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CSon</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CTest</span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">12</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">set</span>(<span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">CSon</span><span class="cm-operator">&gt;</span> <span class="cm-variable">p2</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">13</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_p1</span> <span class="cm-operator">=</span> <span class="cm-variable">p2</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">14</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">15</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">16</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">CSon</span><span class="cm-operator">&gt;</span> <span class="cm-variable">m_p1</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">17</div></div><pre class="CodeMirror-line"><span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">18</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">19</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">class</span> <span class="cm-def">CSon</span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">20</div></div><pre class="CodeMirror-line"><span><span class="cm-keyword">public</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">21</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">22</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-type">void</span> <span class="cm-variable">set</span>(<span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">CTest</span><span class="cm-operator">&gt;</span> <span class="cm-variable">p2</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">23</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-tab">    </span><span class="cm-variable">m_p1</span> <span class="cm-operator">=</span> <span class="cm-variable">p2</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">24</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">25</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">26</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CMyWeakPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">CTest</span><span class="cm-operator">&gt;</span> <span class="cm-variable">m_p1</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">27</div></div><pre class="CodeMirror-line"><span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">28</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">29</div></div><pre class="CodeMirror-line"><span><span class="cm-type">void</span> <span class="cm-def">foo</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">30</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CTest</span><span class="cm-operator">*</span> <span class="cm-variable">father</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">CTest</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">31</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CSon</span><span class="cm-operator">*</span> <span class="cm-variable">son</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">CSon</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">32</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">33</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">34</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">CTest</span><span class="cm-operator">&gt;</span> <span class="cm-variable">ptrFather</span>(<span class="cm-variable">father</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">35</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">CStrongPtr</span><span class="cm-operator">&lt;</span><span class="cm-variable">CSon</span><span class="cm-operator">&gt;</span> <span class="cm-variable">ptrSon</span>(<span class="cm-variable">son</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">36</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">37</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">father</span><span class="cm-operator">-&gt;</span><span class="cm-variable">set</span>(<span class="cm-variable">ptrSon</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">38</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">son</span><span class="cm-operator">-&gt;</span><span class="cm-variable">set</span>(<span class="cm-variable">ptrFather</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">39</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">40</div></div><pre class="CodeMirror-line"><span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">41</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">42</div></div><pre class="CodeMirror-line"><span><span class="cm-type">int</span> <span class="cm-def">_tmain</span>(<span class="cm-type">int</span> <span class="cm-variable">argc</span>, <span class="cm-variable">_TCHAR</span><span class="cm-operator">*</span> <span class="cm-variable">argv</span>[])</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">43</div></div><pre class="CodeMirror-line"><span>{</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">44</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-variable">foo</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">45</div></div><pre class="CodeMirror-line"><span><span>​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">46</div></div><pre class="CodeMirror-line"><span><span class="cm-tab">    </span><span class="cm-keyword">return</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">47</div></div><pre class="CodeMirror-line"><span>}</span></pre></div></div></div></div></div></div><div style="top: 1136px; width: 1px; height: 30px; border-bottom-color: transparent; border-bottom-width: 0px; border-bottom-style: solid; position: absolute;"></div><div class="CodeMirror-gutters" style="height: 1166px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;">&nbsp;</span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div><div><span style="text-indent: 0px; font-style: normal; font-weight: normal; display: inline !important;"><br></span></div></body></html>